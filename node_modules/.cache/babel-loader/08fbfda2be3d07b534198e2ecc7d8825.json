{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_productPage\\\\my-react-app\\\\src\\\\atoms\\\\Text\\\\Text.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Text = props => {\n  const {\n    textInput,\n    type\n  } = props;\n  let arr = [\"h1\", \"h2\", \"p\"];\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: (() => {\n      switch (game) {\n        case 'start':\n          return /*#__PURE__*/_jsxDEV(Start, {\n            handleClick: handleClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 20\n          }, this);\n\n        case 'playing':\n          return /*#__PURE__*/_jsxDEV(Playing, {\n            handleClick: handleClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 20\n          }, this);\n\n        case 'won':\n          return /*#__PURE__*/_jsxDEV(Won, {\n            handleClick: handleClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 20\n          }, this);\n\n        case 'lost':\n          return /*#__PURE__*/_jsxDEV(Lost, {\n            handleClick: handleClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 20\n          }, this);\n\n        default:\n          return null;\n      }\n    })()\n  }, void 0, false);\n};\n\n_c = Text;\nexport default Text;\n\nvar _c;\n\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"sources":["D:/react_productPage/my-react-app/src/atoms/Text/Text.jsx"],"names":["Text","props","textInput","type","arr","console","log","game","handleClick"],"mappings":";;;;AAAA,MAAMA,IAAI,GAAIC,KAAD,IAAU;AACnB,QAAM;AAACC,IAAAA,SAAD;AAAWC,IAAAA;AAAX,MAAmBF,KAAzB;AACA,MAAIG,GAAG,GAAG,CAAC,IAAD,EAAM,IAAN,EAAW,GAAX,CAAV;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,sBACI;AAAA,cACC,CAAC,MAAM;AACR,cAAQM,IAAR;AACE,aAAK,OAAL;AACE,8BAAO,QAAC,KAAD;AAAO,YAAA,WAAW,EAAEC;AAApB;AAAA;AAAA;AAAA;AAAA,kBAAP;;AACF,aAAK,SAAL;AACE,8BAAO,QAAC,OAAD;AAAS,YAAA,WAAW,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA,kBAAP;;AACF,aAAK,KAAL;AACE,8BAAO,QAAC,GAAD;AAAK,YAAA,WAAW,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,kBAAP;;AACF,aAAK,MAAL;AACE,8BAAO,QAAC,IAAD;AAAM,YAAA,WAAW,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA,kBAAP;;AACF;AACE,iBAAO,IAAP;AAVJ;AAYD,KAbE;AADD,mBADJ;AAoBH,CAxBD;;KAAMR,I;AA0BN,eAAeA,IAAf","sourcesContent":["const Text = (props) =>{\r\n    const {textInput,type} = props;\r\n    let arr = [\"h1\",\"h2\",\"p\"]\r\n    console.log(props);\r\n    return (\r\n        <>\r\n        {(() => {\r\n        switch (game) {\r\n          case 'start':\r\n            return <Start handleClick={handleClick} />\r\n          case 'playing':\r\n            return <Playing handleClick={handleClick} />\r\n          case 'won':\r\n            return <Won handleClick={handleClick} />\r\n          case 'lost':\r\n            return <Lost handleClick={handleClick} />\r\n          default:\r\n            return null\r\n        }\r\n      })()}\r\n        \r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Text"]},"metadata":{},"sourceType":"module"}